//subcoinsultas a relaiar con la nortwind
//Ejemplo exists en base northwind
SELECT CustomerID, CompanyName
FROM dbo.Customers c
WHERE EXISTS (
    SELECT 1
    FROM dbo.Orders o
    WHERE o.CustomerID = c.CustomerID
);

En esta primera cdonsulta se solicita clinetes con al menos 1 pedido

//el uso de no exists
SELECT CustomerID, CompanyName
FROM dbo.Customers c
WHERE NOT EXISTS (
    SELECT 1
    FROM dbo.Orders o
    WHERE o.CustomerID = c.CustomerID
);

Clientes que no tienen pedidos 

//consulta con IN
SELECT CustomerID, CompanyName, Country
FROM dbo.Customers
WHERE Country IN ('USA', 'UK', 'Mexico');

//retorna clientes que esten dentro de los 3 paises

#JOIN Y SUS TIPOS 
//inner join para buscar clientes que tienen pedidos registadrados
SELECT c.CustomerID, c.CompanyName, o.OrderID, o.OrderDate
FROM Customers c
INNER JOIN Orders o ON c.CustomerID = o.CustomerID;

//left join, muestra todos los clientes, tengan o no pedido 
SELECT c.CustomerID, c.CompanyName, o.OrderID
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID;

//rigth join, para mostrar pedidos 
SELECT c.CustomerID, c.CompanyName, o.OrderID
FROM Customers c
RIGHT JOIN Orders o ON c.CustomerID = o.CustomerID;

//full jooin, para clinetes y pedidos en general
SELECT c.CustomerID, c.CompanyName, o.OrderID
FROM Customers c
FULL OUTER JOIN Orders o ON c.CustomerID = o.CustomerID;

//cross join, combinaciones entre transportistas y regiones, tener cuidado de sacar millones de copmbinaciones
SELECT s.ShipperID, s.CompanyName AS Shipper,
       r.RegionID, r.RegionDescription
FROM Shippers s
CROSS JOIN Region r;

//union
SELECT CompanyName, 'Cliente' AS Tipo
FROM Customers

UNION

SELECT CompanyName, 'Proveedor' AS Tipo
FROM Suppliers;

